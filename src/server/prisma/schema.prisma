generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  username    String    @unique
  password    String
  roles       Role[]    @default([USER])
  name        String?
  email       String?
  phoneNumber String?
  birthDate   DateTime?
  createdAt   DateTime  @default(now())
}

model Game {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  cards       Card[]
  matches     Match[]
  createdAt   DateTime @default(now())
}

model Match {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  game      Game          @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId    String        @db.ObjectId
  players   MatchPlayer[]
  createdAt DateTime      @default(now())
}

model MatchPlayer {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  Match    Match?  @relation(fields: [matchId], references: [id], onDelete: Cascade)
  matchId  String? @db.ObjectId
  username String
  score    Int     @default(0)

  @@unique([matchId, username])
}

model Card {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  Game      Game?    @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId    String?  @db.ObjectId
  question  String
  answer    String
  points    Int      @default(1)
  createdAt DateTime @default(now())

  @@unique([gameId, question])
}

enum Role {
  ADMIN
  USER
}
